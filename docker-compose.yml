version: '3.9'

services:
  elasticsearch:
    container_name: tqd-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.21
    volumes:
      - esdata:/usr/share/elasticsearch/data
    environment:
      # - bootstrap.memory_lock=true
      # - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - discovery.type=single-node
      - cluster.routing.allocation.disk.watermark.low=1gb
      - cluster.routing.allocation.disk.watermark.high=500mb
      - cluster.routing.allocation.disk.watermark.flood_stage=200mb
      - cluster.routing.allocation.disk.threshold_enabled=false
      - xpack.security.enabled=false
    ports:
      - 9300:9300
      - 9200:9200
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://localhost:9200/_cat/health || exit 1"
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.17.21
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy

  backend:
    build:
      context: .
      dockerfile: ./server/v1/DockerFile
    depends_on:
      elasticsearch:
        condition: service_healthy
    env_file: .env
    volumes:
      - ./server/v1:/node/app
      - /node/app/node_modules
    ports:
      - ${NODE_PORT}:${NODE_PORT}
    container_name: email-node-app

  react-build:
    build:
      context: .
      dockerfile: ./web/DockerFile
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./web:/react/app
      - /react/app/node_modules
    container_name: email-react-app
    env_file: .env
    depends_on:
      - backend

volumes:
  esdata:
    driver: local
